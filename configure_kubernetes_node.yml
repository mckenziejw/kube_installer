--- 
  - name: Add lab user
    hosts: kubes
    gather_facts: no
    become: yes
    tags:
    - user_config
    tasks:
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow wheel to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Create lab user
      user:
        name: lab
        shell: /bin/bash
        groups: wheel
        createhome: yes
    
    - name: Set authorized key for remote user
      authorized_key:
        user: lab
        state: present
        key: "{{ local_key }}"

  - name: Setup routing for master
    hosts: control
    gather_facts: no
    become: yes
    tags:
      - master_config
    tasks:
    - name: Add iptables-persistent
      apt:
        name: iptables-persistent
        state: latest
        update_cache: yes

    - name: Add masquerade setting
      iptables:
        table: nat
        chain: POSTROUTING
        out_interface: ens160
        jump: MASQUERADE
  
    - name: Save IPTables rules
      shell: iptables-save > /etc/iptables/rules.v4

  - name: Configure Docker
    hosts: kubes
    gather_facts: no
    become: yes
    tags:
      - docker_config
    tasks:
    - name: Install Pip
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
        force: yes
        install_recommends: yes
      loop:
        - python-pip

    - name: Install python dependencies
      pip:
        name: "{{ item }}"
      loop:
      - certifi
      - chardet
      - docker
      - idna
      - requests
      - urllib3
      - websocket-client
      - jinja2
      - colorama
      - pyyaml

#    - name: Set hostname
#      shell: echo {{ inventory_hostname}} > /etc/hostname
        
    - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
      shell: swapoff -a

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
    
    - name: Let iptables see bridged traffic
      shell: "{{ item }}"
      loop:
        - echo "net.bridge.bridge-nf-call-iptables = 1" > /etc/sysctl.d/k8s.conf
        - echo "net.bridge.bridge-nf-call-ip6tables = 1" >> /etc/sysctl.d/k8s.conf
   
    - name: Upgrade the kernel (1 of 2)
      apt:
        deb: "{{ item }}"
      loop:
        - "https://kernel.ubuntu.com/~kernel-ppa/mainline/v4.15/linux-headers-4.15.0-041500_4.15.0-041500.201802011154_all.deb"
        - "https://kernel.ubuntu.com/~kernel-ppa/mainline/v4.15/linux-headers-4.15.0-041500-generic_4.15.0-041500.201802011154_amd64.deb"
        - "https://kernel.ubuntu.com/~kernel-ppa/mainline/v4.15/linux-image-4.15.0-041500-generic_4.15.0-041500.201802011154_amd64.deb"
    
#    - name: Upgrade the kernel (2 of 2)
#      reboot:
    
    - name: Install Aptitude
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
        - wget
        - gnupg-agent
        - iptables-persistent
        - isc-dhcp-server
        - vsftpd
        - openssl

 #   - name: install python libraries
 #     pip:
 #       name:
 #         - pyvmomi
 #         - requests

  - name: Install Docker + Kube
    hosts: kubes
    become: yes
    gather_facts: no
    tags:
      - kube_config
    tasks:
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present
        
    - name: Install docker-ce
      apt:
        update_cache: yes
        name: "{{item}}"
        state: latest
        allow_unauthenticated: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Add user to Docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Add K8s key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add K8s repo
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install kubelet, kubeadm and kubectl
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop:
        - kubelet
        - kubeadm
        - kubectl
   
    - name: Hold kube packages
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

  - name: Build the master node
    hosts: control
    gather_facts: no
    become: yes
    tags:
      - master_config
    tasks:
    - name: Initialize the kubeadm master
      shell: kubeadm init --apiserver-advertise-address={{api_server_advertise_address}} --pod-network-cidr=192.168.0.0/16
      register: init_result

    - name: Save token join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Set token join command fact for later use
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

    - name: Enable non-root access (1 of 3)
      file:
        path: /home/lab/.kube
        state: directory

    - name: Enable non-root access (2 of 3)
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: /home/lab/.kube/config

    - name: Enable non-root access (3 of 3)
      file:
        path: /home/ubuntu/.kube/config
        owner: lab
        group: lab

    - name: Apply Calico networking plugin
      shell: kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml --kubeconfig=/home/ubuntu/.kube/config

  - name: Join workers
    hosts: workers
    gather_facts: no
    become: yes
    tags:
      - worker_config
      - master_config
    tasks:
      - name: Join worker nodes
        shell: "{{ hostvars['k8s1']['join_command'] }}"
      
  - name: KVM Config
    hosts: kubes
    gather_facts: no
    become: yes
    tags:
      - kvm_config
    tasks:
    - name: Install dependencies
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop:
        - qemu-kvm
        - libvirt-bin
        - virtinst
        - bridge-utils
        - cpu-checker
      
  

  
